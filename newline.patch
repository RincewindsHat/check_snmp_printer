--- check_snmp_printer_orig	2019-05-09 15:35:56.000000000 -0400
+++ check_snmp_printer_new	2019-05-14 11:28:45.006094319 -0400
@@ -73,7 +73,7 @@
 my $state;
 my $traynumber = 0;
 my $statuscode;
-my $EXITSTRING ="";
+my $EXITSTRING;
 my $tcount = 0;
 my $i = 0;
 
@@ -146,7 +146,7 @@
 (defined($opt_tray)) && ($count++);
 ($opt_pagecount) && ($count++);
 if ($count>1) {
-  print "Only use one of messages|model|consum|trays|pagecount options\n\n";
+  print "Only use one of messages|model|consum|trays|pagecount options\n";
   print_help();
   exit($ERRORS{'UNKNOWN'});
 }
@@ -350,7 +350,7 @@
 	$tcount = (scalar @colors);
 	if (@percentages != 0 ) { $measurable = 1; }
 	if ($measurable) { $pct_remaining = " is at ".$percentages[0]. "% remaining."; }
-	$EXITSTRING = $status[0].": ".$colors[0].$pct_remaining."<br>";
+	$EXITSTRING = $status[0].": ".$colors[0].$pct_remaining."\n";
 	my $perfcount = $tcount;
 	if ($tcount > 1) {
 		$tcount--;
@@ -361,7 +361,7 @@
 				next; 
 			}
                 	if ($measurable) { $pct_remaining = " is at ".$percentages[$i]. "% remaining."; }
-                        $EXITSTRING.= $status[$i].": ".$colors[$i].$pct_remaining."<br>";
+                        $EXITSTRING.= $status[$i].": ".$colors[$i].$pct_remaining."\n";
 			$tcount--;
 		}
 	}
@@ -494,35 +494,35 @@
 		if ($cap == -3) {
 			# The value (-3) means that the printer knows that at least one unit remains.
 			$state = "OK";
-			$EXITSTRING.= "OK: $name ($xfeeddim x $feeddim)<br>";
+			$EXITSTRING.= "OK: $name ($xfeeddim x $feeddim)\n";
 		} elsif ($cap==-2) {
 			# The value (-2) means unknown
 			# so lets check the tray status instead
 			given ($tstatus) {
-                                when (/0/i) { if ($model =~ m/Canon/) { $state = "OK"; $EXITSTRING.= "OK: $name ($xfeeddim x $feeddim)<br>"; } }
-                                when (/9/i) { if ($model =~ m/HP/) { $state = "OK"; $EXITSTRING.= "OK: $name ($xfeeddim x $feeddim)<br>"; } }
+                                when (/0/i) { if ($model =~ m/Canon/) { $state = "OK"; $EXITSTRING.= "OK: $name ($xfeeddim x $feeddim)\n"; } }
+                                when (/9/i) { if ($model =~ m/HP/) { $state = "OK"; $EXITSTRING.= "OK: $name ($xfeeddim x $feeddim)\n"; } }
 				# still unknown so we'll mark it warning because we just don't know
-                                default { $state = "WARNING"; $EXITSTRING.= "WARNING: ".$name." is in UNKNOWN status.<br>"; }
+                                default { $state = "WARNING"; $EXITSTRING.= "WARNING: ".$name." is in UNKNOWN status.\n"; }
                         }
 		} elsif ($cap==0) {
 			# 0 means there is no paper left! This is our only critical value.
 			# first lets check to see if it's a bypass tray, we'll always assume Tray 1 is such.
 			if ($name eq "Tray 1" || "Stack Bypass") { 
 					$state = "OK";
-					$EXITSTRING.= "OK: ".$name. "<br>";
+					$EXITSTRING.= "OK: ".$name. "\n";
 				} else {
 					$state = "CRITICAL";
-					$EXITSTRING.="CRITICAL: $name ($xfeeddim x $feeddim)<br>";
+					$EXITSTRING.="CRITICAL: $name ($xfeeddim x $feeddim)\n";
 				}
 		} else {
 			($maxcap==0) && ($maxcap=1);
 			my $cap_pct=sprintf("%.2f",$cap*100/$maxcap);
 			if ($cap_pct <= $opt_warning) {
 				$state = "WARNING";
-                                $EXITSTRING.="WARNING: $name ($xfeeddim x $feeddim) is at $cap_pct% paper remaining.<br>";
+                                $EXITSTRING.="WARNING: $name ($xfeeddim x $feeddim) is at $cap_pct% paper remaining.\n";
 			} else {
 				$state = "OK";
-				$EXITSTRING.= "OK: $name ($xfeeddim x $feeddim)<br>";
+				$EXITSTRING.= "OK: $name ($xfeeddim x $feeddim)\n";
 			}	
 		}
 		push (@status, $state);
